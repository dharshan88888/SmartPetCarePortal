package com.examly.springapp.aspect;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.AfterReturning;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Component;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.Collection;

@Aspect
@Component
public class LoggingAspect {

    private static final Logger logger = LoggerFactory.getLogger(LoggingAspect.class);

    @Pointcut("execution(* com.examly.springapp.service.UserService.getAllUsers(..))")
    public void getAllUsers() {}

    @Before("getAllUsers()")
    public void logBefore() {
        logger.info("Fetching all users...");
    }

    @AfterReturning(pointcut = "getAllUsers()", returning = "result")
    public void logAfterReturning(Object result) {
        if (result instanceof Collection<?>) {
            logger.info("Successfully fetched all users, count: {}", ((Collection<?>) result).size());
        } else {
            logger.warn("Unexpected return type: {}", result != null ? result.getClass().getName() : "null");
        }
    }
}
